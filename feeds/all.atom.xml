<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Lucas's 部落格</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2013-08-27T21:07:00+08:00</updated><entry><title>網誌搬遷-改用pelican靜態網誌生成器</title><link href="/wang-zhi-ban-qian-gai-yong-pelicanjing-tai-wang-zhi-sheng-cheng-qi.html" rel="alternate"></link><updated>2013-08-27T21:07:00+08:00</updated><author><name>LucasWei</name></author><id>tag:,2013-08-27:wang-zhi-ban-qian-gai-yong-pelicanjing-tai-wang-zhi-sheng-cheng-qi.html</id><summary type="html">&lt;p&gt;&lt;img alt="搬家" src="/static/images/搬家.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;一直想試試&lt;a href="http://pages.github.com/"&gt;github page&lt;/a&gt;很久了，但是基於懶惰與種種因素...所以一直沒有機會去研究，最近因為想要重新拾起寫網誌的習慣，所以上網研究了許多部落格的方案，
因為雖然想要研究&lt;a href="http://pages.github.com/"&gt;github page&lt;/a&gt;，但是很多東西還是要重新研究，難免讓人覺得「只是想要寫個網誌而已，需要搞的這麼麻煩嗎？」，
就因為這種懶惰的心態作祟，所以一直很不想直接去研究，而在當初的時間還有考慮使用&lt;a href="http://logdown.com/"&gt;Logdown&lt;/a&gt;，不過最後還是選擇了&lt;a href="http://pages.github.com/"&gt;github page&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;選擇自己hosting部落格，而不使用Blogger的原因&lt;/h3&gt;
&lt;p&gt;最初有這個念頭是因為Blogger的編輯器是屬於&lt;a href="http://en.wikipedia.org/wiki/WYSIWYG"&gt;所見即所得&lt;/a&gt;的編輯界面，一來很多編輯過的文字特性沒有可稀性，因為編寫完後的內容，會被轉換成&lt;strong&gt;沒有維護性&lt;/strong&gt;的HTML程式碼，所以沒有辦法使用到其他地方，除非你尋著原本的HTML使用，
二來，張貼程式碼很不方便，要在一般界面和原始碼界面之間切換，當初使用的方法是先把文字內容編輯好後，再切換到HTML編輯器一一插入片段的程式碼，除了常常插錯，也沒有辦法針對程式碼做syntax highlight。&lt;/p&gt;
&lt;p&gt;因為編寫的文章比較沒有需要許多絢麗的特效，所以考慮使用&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;markdown&lt;/a&gt;進行編輯，等到編輯好了之後，再將markdown轉換成HTML直接貼到blogger的編輯界面上；既可以備份原始文字，也解決了編輯不方便的問題。
但也因為如此，這個步驟變得很麻煩，而且日後如果需要修改網誌的內容我也必須修改我自己備份好的markdown，再重新編輯、上傳，自己也需要另外使用服務來備份自己的markdown內容。&lt;/p&gt;
&lt;h4&gt;因此出現了選擇以markdown為主要編輯器的網誌的念頭&lt;/h4&gt;
&lt;p&gt;所以手中的選擇剩下github page和Logdown，但是考量到備份，以及修改的方便性，最後選擇了github page。&lt;/p&gt;
&lt;p&gt;因為目前Logdown所提供的編輯界面雖然很好編輯，但是在主題更換，以及自行修改網誌界面、內容上，還沒有很成熟，
因此我就在想「怎樣的維護、編輯方式，對我來說是最方便的？」，因為自己有編寫javascript、CSS的經驗，很多時候可以直接改內容是最方便的，
所以最後覺得自己尋找靜態的部落格引擎自己編輯後上傳架設，除了這些優點，
因為他是靜態的，需要架設這個部落格的伺服器要求變得相對低很多，也不用考慮動態程式需要考慮的安全問題，最後決定選擇了github page和靜態部落格引擎。&lt;/p&gt;
&lt;h3&gt;引擎挑選&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Pelican" src="/static/images/Pelican.png" /&gt;&lt;/p&gt;
&lt;p&gt;搜尋靜態部落格引擎中，最大宗的關鍵字不外乎是&lt;a href="http://octopress.org/"&gt;octopress&lt;/a&gt;和&lt;a href="http://jekyllrb.com/"&gt;jekyll&lt;/a&gt;，而這兩者又是使用Ruby寫成的，其中&lt;a href="http://jekyllrb.com/"&gt;jekyll&lt;/a&gt;是github page中推薦的靜態引擎，不過因為自己對於python的熟悉度是比較高的，
總是會希望自己選擇的靜態引擎可以以python為開發語言，所以就上網搜尋大家推薦的靜態引擎，就意外找到很多人推薦的&lt;a href="http://docs.getpelican.com/en/3.2/"&gt;Pelican&lt;/a&gt;，
再經過搜尋與研究後，發現目前沒有什麼大問題，而且官方文件很詳細也很齊全，所以就選擇了他來進行使用。&lt;/p&gt;
&lt;h3&gt;安裝&lt;/h3&gt;
&lt;h4&gt;安裝Pelican&lt;/h4&gt;
&lt;p&gt;可以參考官方的安裝指示&lt;a href="http://docs.getpelican.com/en/3.2/getting_started.html"&gt;Getting started&lt;/a&gt;v3.2
如果要使用markdown需要另外安裝&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;建立一個github page的repository&lt;/h4&gt;
&lt;p&gt;開一個repo，名稱需要和帳號相同，並且clone回本地端，因為github page顯示的主要是branch:master的內容，所以需要先開一個branch用來存放網誌的內容，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git branch --orphan gh-pages
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;開始建立你的第一個部落格專案&lt;/h4&gt;
&lt;p&gt;切換到gh-pages的branch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git checkout gh-pages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;建立你的部落格&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之後會產生的檔案結構如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yourproject/
├── content
│   └── (pages)
├── output
├── develop_server.sh
├── Makefile
├── pelicanconf.py       # Main settings file
└── publishconf.py       # Settings to use when ready to publish
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;修改Makefile&lt;/h4&gt;
&lt;p&gt;在輸入完&lt;code&gt;pelican-quickstart&lt;/code&gt;後，會出現比較細項的問題，例如佈署的細節設定（EX:ftp, Dropbox, scp, &lt;strong&gt;Github page&lt;/strong&gt;），在修改後會產生許多檔案和一個Makefile，
而這個Makefile是以後用來編你的部落格，佈署的時候使用的，他也有使用到Python的自帶server，可以讓你不用花時間佈署，直接在本地端檢視。&lt;/p&gt;
&lt;p&gt;因為Github page預設會呈現branch:master內的檔案，而我的Makefile中，如果想要佈署在Github的話，預設是把他編譯玩的結果推到branch:gh-pages上，因此在這邊需要修改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;github&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;publish&lt;/span&gt;
    ghp-import -b master &lt;span class="k"&gt;$(&lt;/span&gt;OUTPUTDIR&lt;span class="k"&gt;)&lt;/span&gt;
    git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果有其他想要佈署的機器或者設定，都可以自己新增在這邊，方便以後佈署跟操作。&lt;/p&gt;
&lt;h4&gt;撰寫文章&lt;/h4&gt;
&lt;p&gt;完成以上的步驟後，你就可以開始寫部落格了！&lt;/p&gt;
&lt;p&gt;文章預設都是放在content資料下內，可以複製底下的範例到裡面：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Title: My super title
Date: 2010-12-03 10:20
Category: Python
Tags: pelican, publishing
Slug: my-super-post
Author: Alexis Metaireau
Summary: Short version for index and feeds

This is the content of my super blog post.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之後直接佈署到Github page上，就可以上去看結果囉，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;確認有之後就可以前往你的Github page看看（http://&lt;em&gt;REPO_NAME&lt;/em&gt;.github.io），有時候他更新的速度沒有這麼快，需要稍等一下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;或者&lt;/strong&gt;，在本地端編譯後連到本地端看，預設是http://localhost:8000&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make html
make serv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;建議使用兩個terminal，一個開啟server，一個用來測試跟編譯。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;如果看到頁面就大功告成囉！&lt;/p&gt;
&lt;h3&gt;Reference&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.dongxf.com/3_Build_Personal_Blog_With_Pelican_And_GitHub_Pages.html"&gt;用 Pelican 和 GitHub Pages 搭建免费的个人博客 | 晓风'Blog'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jsliang.com/blog/2013/02/moving-to-pelican-hosting-on-github-pages.html"&gt;網誌搬家！改用 Pelican + GitHub Pages | J. S. Liang (Jenny)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.codylab.com/From-Octopress-To-Pelican/"&gt;從octorpess搬家到pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/josefjezek/6053301"&gt;How to use Pelican on GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="python"></category><category term="pelican"></category></entry><entry><title>xclip-好用的terminal file剪貼工具</title><link href="/xclip-hao-yong-de-terminal-filejian-tie-gong-ju.html" rel="alternate"></link><updated>2013-08-17T23:51:00+08:00</updated><author><name>LucasWei</name></author><id>tag:,2013-08-17:xclip-hao-yong-de-terminal-filejian-tie-gong-ju.html</id><summary type="html">&lt;p&gt;如果常使用vim編輯檔案可能會遇到一個問題，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果想要將某個檔案的內容複製到其他地方要怎麼辦？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因為vim是使用終端機內的文字編排，所以即使是使用滑鼠游標選取之後在貼上，難免會有許多邊界偵測的問題，以及複製到不必要的字元，因此這個時候還是需要使用GUI的編輯器（EX:geditor）來開啟並且複製。&lt;/p&gt;
&lt;p&gt;為了減少這方面的不方便，ubuntu上有個黏貼管理的程式-&lt;strong&gt;xclip&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;安裝&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;xclip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;前往&lt;a href="http://sourceforge.net/projects/xclip/"&gt;網站&lt;/a&gt;下載&lt;/p&gt;
&lt;h3&gt;用法&lt;/h3&gt;
&lt;h4&gt;終端機內&lt;/h4&gt;
&lt;p&gt;將檔案pipe到終端機的buffer內，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;my_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;xclip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如此會將需要複製的內容複製到x buffer內，等待下次需要使用的時候&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;xclip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以配合其他功能使用，例如：&lt;/p&gt;
&lt;p&gt;丟到另外一份檔案中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;xclip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用grep尋找行內關鍵字&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;xclip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;happy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;如果是想要儲存在GUI的暫存中&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;my_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;xclip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;selection&lt;/span&gt; &lt;span class="n"&gt;clipboard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如此便可以使用滑鼠於其他地方使用貼上功能貼到任意的地方&lt;/p&gt;</summary><category term="xclip"></category><category term="ubuntu"></category></entry><entry><title>setting django on apache server</title><link href="/setting-django-on-apache-server.html" rel="alternate"></link><updated>2013-08-17T23:50:00+08:00</updated><author><name>LucasWei</name></author><id>tag:,2013-08-17:setting-django-on-apache-server.html</id><summary type="html">&lt;p&gt;如果有在ubuntu上架設過LAMP的應該都知道，其實就是幾個指令，設定好密碼，還可以裝個phpmyadmin來管理資料庫，他的方便性大大降低了他的門檻，本著如此方便的精神，我覺得「安裝Django應該也很簡單吧？」就開始這段錯誤的過程，因為python不算是native支援網頁顯示的，使用一些module，或是使用以前CGI的方式來讓apache驅動他，外加上Django其實是包好好的Framework，所以在設定上就有這麼不人性點。所以，經過這麼多波折，我決定把這些過程記錄下來XD。&lt;/p&gt;
&lt;h3&gt;環境設定&lt;/h3&gt;
&lt;p&gt;首先，你需要
1. 安裝server，並且安裝wsgi的module&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt; &lt;span class="n"&gt;libapache2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mod&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wsgi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安裝&lt;a href="http://www.openfoundry.org/tw/tech-column/8536-introduction-of-python-extension-management-tools"&gt;python pip&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;setuptools&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最後，再用pip安裝Django，之後的問題就隨之而來了（誤&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;之後，在你想要撰寫的目錄下，新增一個資料夾，用來管理之後的程式（我是在家目錄底下新增/home/lucas/django）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;IP設定&lt;/h3&gt;
&lt;p&gt;在hosts中新增幾個IP&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;vi /etc/hosts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;   &lt;span class="n"&gt;localhost&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.2&lt;/span&gt;   &lt;span class="n"&gt;wsgi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;djangoserver&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.3&lt;/span&gt;   &lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;djangoserver&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;測試WSGI是否可以執行&lt;/h3&gt;
&lt;p&gt;創建資料夾&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mkdir ~/django/myapp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;新增python的應用程式&lt;code&gt;wsgi.app&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;vi ~/django/myapp/wsgi.app&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;

        &lt;span class="n"&gt;response_headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;plain&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)))]&lt;/span&gt;
        &lt;span class="n"&gt;start_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response_headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;新增apache的設定&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo vi /etc/apache2/sites-available/wsgi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="err"&gt;*:80&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        ServerName wsgi.djangoserver
        DocumentRoot /home/lucas/django

        &lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="err"&gt;/home/lucas/django&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            Order allow,deny
            Allow from all
        &lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

        WSGIScriptAlias / /home/lucas/django/myapp/wsgi.app         
    &lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;將設定檔生效&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo a2ensite
  sudo service apache2 reload&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;測試你的wsgi是否有效
&lt;a href="http://wsgi.djangoserver"&gt;http://wsgi.djangoserver&lt;/a&gt;如果沒有看到&lt;code&gt;Hello World!&lt;/code&gt;表示wsgi的設定就有問題了，可能需要先完成這個步驟，才可以繼續設定你的環境。&lt;/p&gt;
&lt;h3&gt;測試Django是否可以安裝&lt;/h3&gt;
&lt;p&gt;開啟一個Django的project&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mkdir ~/django
  python django-admin.py mysite&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;設定一個網站的wsgi file&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mkdir ~/django/apache
  vi ~/django/apache/django.wsgi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;編輯&lt;code&gt;django.wsgi&lt;/code&gt;的內容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;srv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;srv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wsgi&lt;/span&gt;
&lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;handlers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wsgi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WSGIHandler&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;新增一個apache site&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo vi /etc/apache2/site-available/hello&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;編輯&lt;code&gt;hello&lt;/code&gt;的內容&lt;/p&gt;
&lt;p&gt;&lt;VirtualHost *:80&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;ServerName&lt;/span&gt; &lt;span class="nx"&gt;hello.djangoserver&lt;/span&gt;
&lt;span class="nb"&gt;DocumentRoot&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;srv&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;www&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;hello&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Directory&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;srv&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;www&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;Order&lt;/span&gt; &lt;span class="nx"&gt;allow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;deny&lt;/span&gt;
    &lt;span class="nx"&gt;Allow&lt;/span&gt; &lt;span class="nb"&gt;from&lt;/span&gt; &lt;span class="kc"&gt;all&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;Directory&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nx"&gt;WSGIDaemonProcess&lt;/span&gt; &lt;span class="nx"&gt;hello.djangoserver&lt;/span&gt; &lt;span class="n"&gt;processes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;threads&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="na"&gt;-name&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;WSGIProcessGroup&lt;/span&gt; &lt;span class="nx"&gt;hello.djangoserver&lt;/span&gt;

&lt;span class="nx"&gt;WSGIScriptAlias&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;srv&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;www&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;django.wsgi&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;VirtualHost&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;啟動apache site&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo a2ensite hello
  sudo /etc/init.d/apache2 reload&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用瀏覽器啟動&lt;a href="http://hello.djangoserver"&gt;http://hello.djangoserver&lt;/a&gt;你就會看到歡迎頁面了&lt;/p&gt;
&lt;p&gt;參考：
&lt;a href="http://blog.stannard.net.au/2010/12/11/installing-django-with-apache-and-mod_wsgi-on-ubuntu-10-04/"&gt;Installing Django with Apache and mod_wsgi on Ubuntu 10.04&lt;/a&gt;
&lt;a href="http://library.linode.com/frameworks/django-apache-mod-wsgi/ubuntu-10.04-lucid#sph_configure-django-applications-for-wsgi"&gt;Django, Apache and mod_wsgi on Ubuntu 10.04 (Lucid)&lt;/a&gt;&lt;/p&gt;</summary><category term="Django"></category><category term="Ubuntu"></category></entry><entry><title>django基本介紹</title><link href="/djangoji-ben-jie-shao.html" rel="alternate"></link><updated>2013-08-17T23:49:00+08:00</updated><author><name>LucasWei</name></author><id>tag:,2013-08-17:djangoji-ben-jie-shao.html</id><summary type="html">&lt;p&gt;趁著專題結束，趕快把Django的內容寫下一些紀錄，方便自己以後要用的時候可以查找，也因為雖然他的文件很完善了XD，但是因為是英文比較難閱讀，而且也需要許多實作來驗證想法，因此想要寫些筆記把心得跟細節記錄下來。&lt;/p&gt;
&lt;p&gt;需要知道Django在Ubuntu上如何安裝與基本的運行，請參照&lt;a href="http://lucaswei.blogspot.tw/2012/01/ubuntu-django.html"&gt;這篇&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;首先&lt;/h2&gt;
&lt;p&gt;在command line鍵入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我使用的版本文1.4.1，作業系統為Ubuntu12.04，所以如果以前或者以後的版本可能會有相容性的問題。&lt;/p&gt;
&lt;h2&gt;建立一個project&lt;/h2&gt;
&lt;p&gt;使用command line輸入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;startproject&lt;/span&gt; &lt;span class="n"&gt;myproject&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;myproject可以置換成自己想要的專案名稱&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;之後會得到一個資料夾，用剛才的專案名稱命名，使用cd切換進去後，可以看到以下許多檔案。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysite&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
    &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
    &lt;span class="n"&gt;mysite&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
        &lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
       &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
        &lt;span class="n"&gt;wsgi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接著輸入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;myproject&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;runserver&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果看到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Validating models...&lt;/p&gt;
&lt;p&gt;0 errors found
Django version 1.4.1, using settings 'myproject.settings'
Development server is running at http://127.0.0.1:8000/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接著使用瀏覽器開啟http://127.0.0.1:8000/就可以看到成功頁面了&lt;/p&gt;
&lt;p&gt;（歡樂的It worked!）&lt;/p&gt;
&lt;h3&gt;setting.py&lt;/h3&gt;
&lt;p&gt;所有Django的設定擺放的地方，其中包含許多基本的設定；在創建之後裡面有些項目必須先設定，以方便之後的開發。&lt;/p&gt;
&lt;h4&gt;資料庫的設定&lt;/h4&gt;
&lt;p&gt;大部分的web framework都會需要用到資料庫，所以可以優先設定，以下為設定好的例子（以MySQL為例子）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;# Add &amp;#39;postgresql_psycopg2&amp;#39;, &amp;#39;mysql&amp;#39;, &amp;#39;sqlite3&amp;#39; or &amp;#39;oracle&amp;#39;.&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;ENGINE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django.db.backends.mysql&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c"&gt;# Or path to database file if using sqlite3.&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c"&gt;# Not used with sqlite3.&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;USER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;lucas&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c"&gt;# Not used with sqlite3.&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;lucas_password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c"&gt;# Set to empty string for localhost. Not used with sqlite3.&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c"&gt;# Set to empty string for default. Not used with sqlite3.&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中最重要的就是&lt;strong&gt;ENGINE&lt;/strong&gt;,&lt;strong&gt;NAME&lt;/strong&gt;,&lt;strong&gt;USER&lt;/strong&gt;,&lt;strong&gt;PASSWORD&lt;/strong&gt;需要設定，比較細部的設定可以參考&lt;a href="https://docs.djangoproject.com/en/1.4/intro/tutorial01/#database-setup"&gt;官方的Database setup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;如果是MySQL使用者，記得設定完後去資料庫中新增一個資料庫，而且名字必須要跟設定中的&lt;strong&gt;NAME&lt;/strong&gt;相同，以此為例就需要一個&lt;strong&gt;django&lt;/strong&gt;為名稱的資料庫。&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;時區設定&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;TIME_ZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Taipei&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;LANGUAGE_CODE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zh-tw&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如何挑選所在的時區可以參照&lt;a href="http://en.wikipedia.org/wiki/List_of_tz_zones_by_name"&gt;wiki&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;urls.py&lt;/h2&gt;
&lt;p&gt;整個專案中，用來設定對於網站的request應該開啟哪個頁面的重要設定檔案，寫好網站mapping的pattern後，之後的request都會根據此份檔案。&lt;/p&gt;</summary><category term="Django"></category><category term="Ubuntu"></category></entry><entry><title>SQL prepare statement</title><link href="/sql-prepare-statement.html" rel="alternate"></link><updated>2013-08-17T23:49:00+08:00</updated><author><name>LucasWei</name></author><id>tag:,2013-08-17:sql-prepare-statement.html</id><summary type="html">&lt;p&gt;今天在寫程式的時候意外的看到一段SQL  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    SELECT token FROM oauth_tokens WHERE userID = ? LIMIT 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而其中的問號引起了我的注意，因為沒有看到&lt;code&gt;userID&lt;/code&gt;在程式中出現，所以就查了一下SQL中問號的功用，後來在&lt;a href="http://stackoverflow.com/questions/3727688/what-does-a-question-mark-represent-in-sql-queries"&gt;stackover裡面的這篇&lt;/a&gt;好到答案，才發現他其實是一個好習慣，所以就順便筆記下來了&lt;/p&gt;

&lt;h4&gt;問號的功能，是用來變數化SQL查詢&lt;/h4&gt;

&lt;p&gt;他一種安全的作法用來取代原來的寫法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ODBCCommand cmd = new ODBCCommand("SELECT thingA FROM tableA WHERE thingB = 7")
    result = cmd.Execute()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;這個寫法在&lt;code&gt;thingB&lt;/code&gt;為固定值的時候沒有什麼問題，但是當你需要動態載入變數的時候，他就會需要寫成這樣（底下的方法是不建議的）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    string s = getStudentName()
    cmd.CommandText = "SELECT * FROM students WHERE (name = '" + s + "')"
    cmd.Execute()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我們就很直覺的使用字串串接的方式來將變數整合成一句SQL，但是這樣會面臨&lt;code&gt;SQL injection&lt;/code&gt;的危險，因為當你要寫入的變數，是來自於你不信任的第三方&lt;em&gt;（不論是使用者、或者是hacker）&lt;/em&gt;都有可能串接到無法預期的文字，好一點只是SQL statement Error，但是如果對方傳入設計過的字串，例如&lt;code&gt;Robert'); DROP TABLE students; --&lt;/code&gt;，則結果會...&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    SELECT* FROM students WHERE (name = Robert');
    DROP TABLE students;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就悲劇了，當然你可能會覺得他怎麼知道你的TABLE Name那又是另外一回事了.XD&lt;/p&gt;

&lt;h4&gt;所以&lt;/h4&gt;

&lt;p&gt;應該改用這種方式，除了程式有比較好的可讀性以外，還可以事先過濾使用者輸入的字串&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ODBCCommand cmd = new ODBCCommand("SELECT thingA FROM tableA WHERE thingB = ?")
    cmd.Parameters.Add(7)
    result = cmd.Execute()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;當然你也可以使用&lt;a href="http://php.net/manual/en/book.pdo.php"&gt;php PDO&lt;/a&gt;的方式來寫入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $query = 'SELECT token FROM oauth_tokens WHERE userID = ? LIMIT 1';
    $stmt = $this-&amp;gt;pdo-&amp;gt;prepare($query);
    $stmt-&amp;gt;execute(array($this-&amp;gt;userID));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;都是一種好習慣也是一種好方法:D&lt;/p&gt;</summary><category term="SQL"></category><category term="Ubuntu"></category></entry></feed>